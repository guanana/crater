name: Docker
on:
  push:
    branches:
      - master
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
          php: [ '7.4', '8.0' ]
    steps:
      - uses: actions/checkout@v3

      - name: Check coding style
        run: ./vendor/bin/php-cs-fixer fix -v --dry-run --using-cache=no --config=.php-cs-fixer.dist.php

      - name: Unit Tests
        run: php ./vendor/bin/pest

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  build-php:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v3

      # Support for more platforms
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: |
            ${{ secrets.DOCKERHUB_NAMESPACE }}/${{ github.repository }}
            ghcr.io/${{ github.repository_owner }}/${{ github.repository }}
          flavor: |
            latest=${{ startsWith(github.ref, 'refs/tags/') }}
          tags: |
            type=schedule
            type=ref,event=branch,enable=${{ github.event_name != 'schedule' }}
            type=ref,event=tag

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64, linux/arm64, linux/386, linux/arm/v7, linux/arm/v6
          build-args: |
            USER=crater-user
            UID=1000
            CRATER_DOCKER_TAG=${{ steps.meta.outputs.version }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-nginx:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v3

      # Support for more platforms
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          images: |
            ${{ secrets.DOCKERHUB_NAMESPACE }}/${{ github.repository }}-nginx
            ghcr.io/${{ github.repository_owner }}/${{ github.repository }}-nginx
          flavor: |
            latest=${{ startsWith(github.ref, 'refs/tags/') }}
          tags: |
            type=schedule
            type=ref,event=branch,enable=${{ github.event_name != 'schedule' }}
            type=ref,event=tag

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker-compose/nginx.dockerfile
          platforms: linux/amd64, linux/arm64, linux/386, linux/arm/v7, linux/arm/v6
          build-args: |
            NGINX_VERSION=1.17-alpine
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

